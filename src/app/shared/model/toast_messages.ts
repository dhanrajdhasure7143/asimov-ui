export class toastMessages{
  public botExcecution_fail = "Failed to execute the bot!";
  public botExcecution_success = "Bot executed successfully";
  public updateError = "Failed to update!";
  public saveError = "Failed to save!";
  public deleteError = "'Failed to delete!";
  public bpsImportError = "Failed to import BPMN notation!";
  public bpsApproveError = "Failed to approve!";
  public bpsRejectError = "Failed to reject!";
  public reminderError = "Failed to send reminder!";
  public reminderSuccess = "Reminder sent successfully!";
  public processOwnerError = "Unable to find the process owner for the selected process!";
  public resourceError = "Failed to add resource!";
  public createError = "Failed to create!";
  public uploadError = "Failed to upload!";
  public accessTokenError = "Unable to generate the access token!";
  public connectionError = "Failed to connect!";
  public deployError = "Failed to deploy!";
  public botConfigError = "Unable to configure bot task configurations!";
  public botImportError = "Unable to import the bot!";
  public formConfigError = "Failed to get the configuration form!";
  public connectionCheckError = "Please check the connections!";
  public auditLogUpdateError = "Unable to update the audit logs!";
  public botExecuteError = "Unable to execute the bot!";
  public versionError = "Unable to get versions!";
  public botExport = "Bot exported successfully!";
  public botImport = "Bot imported successfully!";
  public userDelete = "User deleted successfully!";
  public userInvite = "User invited successfully!";
  public userUpdate = "User details updated successfully!";
  public InviteFail = "Failed to invite! Check if the user already exists!";
  public passwordCheck = "Please check your current password!";
  public functionError = "Unable to get Functions!";
  public processError = "Unable to get Processes!";
  public templateError = "Unable to get Templates!";
  public fillDetails = "Please fill in all the fields!";
  public getLogsFail = "Unable to get audit logs!";
  public schLoadFail = "Unable to load schedules!";
  public saveSchedule =  "Schedule saved successfully!";
  public scheduleStart =  "Schedule started successfully!";
  public schedulePause =  "Schedule paused successfully!";
  public scheduleResume =  "Schedule resumed successfully!";
  public scheduleDelete =  "Schedule deleted successfully!";
  public logSwitchState =  "Unable to get log switch state";
  public getlogsError = "Unable to get the logs!";
  public loopLogsErr = "Unable to open the loop logs!";
  public automationLogsErr = "Unable to get the automation logs!";
  public toggleChangeErr = "Failed to change the toggle!";
  public toggleChangeSuccss = "Successfully changed the toggle!";
  public getToolsetErr = "Unable to get the toolset!";
  public loadDataErr = "Unable to load the data!";
  public loadBotErr = "Unable to load bot!";
  public preDefineBotErr = "Unable to get the predefined bots!";
  public selectedBotWarn = "The selected bot is already loaded!";
  public SLAConfigSave = "SLA configuration saved successfully!";
  public reorderTaskErr = "Unable to re-order tasks!";
  public reorderTaskWarn = "Please select process to re-oder tasks!";
  public aissignResource = "Resource assigned successfully!";
  public aissignResourceErr = "Failed to assign a resource!";
  public configAddSucss = "Configuration added successfully!";
  public TaskDelete = "Task deleted successfully!";
  public addTask = "Task added successfully!";
  public getBotDataErr = "Unable to get bot data!";
  public updateLogsErr = "Unable to update the logs!";
  public getVersionsErr = "Unable to get versions!";
  public getBotLogsErr = "Failed to get bot logs!";
  public executeBotErr = "Unable to execute the bot!";
  public startBotErr = "Failed to start the bot!";
  public pauseBotErr = "Unable to pause the bot!";
  public stopBotErr = "Failed to stop the bot!";
  public uiPathBotErr = "Unable to get UiPath bots!";
  public getUserListErr = "Unable to get the users list!";
  public botIntiationSucss = "Bot execution initiated successfully!";
  public getBotListErr = "Unable to get the bot's list!";
  public taskApprove = "Task approved successfully!";
  public taskReject = "Task rejected successfully!";
  public getIncidentErr = "Unable to get incidents!";
  public noScheduleSelected = "No schedule is selected to delete!";
  public schDeleteErr = "Unable to delete the schedule!";
  public schAddErr = "Failed to add schedule!";
  public schDeleteSccs = "Schedule deleted successfully!";
  public schSaveSccs = "Schedule saved successfully!";
  public checkOffline = "Please check your internet connection!";
  public checkOnline = "You are now online!";
  public SlctPownerErr = "Please select the process owner!";
  public taskAutomate = "Tasks automated successfully!";
  public slctApproverErr = "Please select an approver from the list given above!";
  public submitApproval = "Your changes have been saved and submitted for approval successfully!";
  public startProcess = "Process started successfully!";
  public OopsErr = "Oops! Something went wrong. Please try again!";
  public saveChanges = "Your changes have been saved successfully!";
  public notationPendingErr = "The notation is already in 'PENDING' status!";
  public internalServrErr = "Oops! Internal server error. Please try again later!";
  public redirectInfo = "Please wait, redirecting to the workspace!";
  public BpmGenerateFail = "Oops! Failed to generate BPM notation. Please try again later!";
  public autoClose = "Auto-close alert! I will close in <b></b> milliseconds!";
  public fileExtensionErr = "Please upload a file with the proper extension!";
  public plzTryAgain = "Please try again!";
  public onlyExlAccss = "You only have access to upload Excel files!";
  public processIdErr = "Entered Process ID is invalid!";
  public redirect2PrcssMap = "Please wait, redirecting to the process map!";
  public noDataFoundErr = "No data was found in the uploaded file!";
  public processDelete = "Process deleted successfully!";
  public fileUpldScss = "File uploaded successfully!";
  public fldrNameUpdate = "Folder name updated successfully!";
  public fldrCreateScss = "Folder created successfully!";
  public fldrNameExists = "Folder name already exists!";
  public fileNotAllow = "This file not Allowed!";
  public someFileExists = "Some files already exists!";
  public FileNameExists = "File name already exists!";
  public noDocumentInfo = "No documents in selected folder!";
  public deleteScss = "Deleted successfully!";
  public keyPairWarn = "Update Environment is not configured for key pair authentication!";
  public ppkFileErr = "Unable to download .ppk file!";
  public apprvrListErr = "Unable to get the approvals list!";
  public cmpltedApprvrErr = "Status updation is not allowed for completed approvals!";
  public apprvlUpdateErr = "Unable to update approval!";
  public statusUpdateErr_apprvls = "Status will not update for completed approvals.";
  
}